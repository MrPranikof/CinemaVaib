from PyQt6.QtCore import Qt
from PyQt6.QtGui import QPixmap, QCursor
from PyQt6.QtWidgets import QWidget, QVBoxLayout, QLabel, QPushButton, QHBoxLayout, QStackedWidget, QMessageBox

from Views.ProfileView import ProfileView
from Views.AdminPanelView import AdminPanelView
from Views.AdminPanelUsersView import AdminPanelUsersView
from Models.UserModel import UserModel


class MainView(QWidget):
    def __init__(self, user_id, go_login=None):
        super().__init__()
        self.user_id = user_id
        self.go_login = go_login

        # –ü–æ–ª—É—á–∞–µ–º –ê–ö–¢–£–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        self.user_data = UserModel.get_user_data(user_id)

        if not self.user_data:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            if go_login:
                go_login()
            return

        # Header
        self.header = QWidget()
        self.header.setObjectName("HeaderBar")

        h_header = QHBoxLayout(self.header)
        h_header.setContentsMargins(20, 10, 20, 10)
        h_header.setSpacing(15)

        self.logo_label = QLabel()
        pix = QPixmap("images/headerLogo.png")
        pix = pix.scaledToHeight(38, Qt.TransformationMode.SmoothTransformation)
        self.logo_label.setPixmap(pix)
        self.logo_label.setCursor(QCursor(Qt.CursorShape.PointingHandCursor))
        self.logo_label.setObjectName("HeaderLogo")
        self.logo_label.mousePressEvent = self.show_main_page

        self.btn_profile = QPushButton("üë®‚Äçüíº\n–ü—Ä–æ—Ñ–∏–ª—å")
        self.btn_profile.setObjectName("HeaderButton")
        self.btn_profile.clicked.connect(self.show_profile_page)

        self.adminBtn = QPushButton("üõ†\n–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
        self.adminBtn.setObjectName("HeaderButton")
        self.adminBtn.setVisible(self.user_data['role_id'] == 2)
        self.adminBtn.clicked.connect(self.show_admin_page)

        h_header.addWidget(self.logo_label)
        h_header.addStretch()
        h_header.addWidget(self.btn_profile)
        h_header.addWidget(self.adminBtn)

        # Content area
        self.stack = QStackedWidget()
        self.stack.setObjectName("ContentArea")

        # –í–°–ï —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é (lazy loading)
        self.page_main = None
        self.page_profile = None
        self.page_admin_panel = None
        self.page_admin_panel_users = None
        self.page_admin_panel_actors = None
        self.page_admin_panel_directors = None
        self.page_admin_panel_movies = None
        self.page_admin_panel_genres = None

        # Footer
        self.footer = QWidget()
        self.footer.setObjectName("FooterBar")

        h_footer = QHBoxLayout(self.footer)
        h_footer.setContentsMargins(20, 8, 20, 8)
        h_footer.setSpacing(10)

        self.footer_text = QLabel("¬© 2025 CinemaVaib ‚Äî –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã, v0.3.0")
        self.footer_text.setObjectName("FooterText")
        h_footer.addStretch()
        h_footer.addWidget(self.footer_text)
        h_footer.addStretch()

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)
        main_layout.addWidget(self.header)
        main_layout.addWidget(self.stack, stretch=1)
        main_layout.addWidget(self.footer)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self.show_main_page()

    def _create_main_page(self):
        from Views.Components.MovieGridView import MovieGridView

        # –ü–æ–ª—É—á–∞–µ–º –°–í–ï–ñ–ò–ï –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
        fresh_data = UserModel.get_user_data(self.user_id)

        if not fresh_data:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –ë–î
            page = QWidget()
            layout = QVBoxLayout(page)
            layout.setAlignment(Qt.AlignmentFlag.AlignCenter)
            error_label = QLabel("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            error_label.setObjectName("ErrorLabel")
            layout.addWidget(error_label)
            return page

        page = QWidget()
        main_layout = QVBoxLayout(page)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)

        # –°–µ—Ç–∫–∞ —Ñ–∏–ª—å–º–æ–≤
        self.movie_grid = MovieGridView()
        self.movie_grid.movie_clicked.connect(self.show_movie_detail)
        main_layout.addWidget(self.movie_grid)

        return page

    def show_main_page(self, event=None):
        if self.page_main is not None:
            self.stack.removeWidget(self.page_main)
            self.page_main.deleteLater()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.user_data = UserModel.get_user_data(self.user_id)

        if not self.user_data:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            if self.go_login:
                self.go_login()
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∫–∏ (—Ä–æ–ª—å –º–æ–≥–ª–∞ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è)
        self.adminBtn.setVisible(self.user_data['role_id'] == 2)

        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        self.page_main = self._create_main_page()
        self.stack.addWidget(self.page_main)
        self.stack.setCurrentWidget(self.page_main)

    def show_profile_page(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Å –ê–ö–¢–£–ê–õ–¨–ù–´–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ë–î"""
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
        self.user_data = UserModel.get_user_data(self.user_id)

        if not self.user_data:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            if self.go_login:
                self.go_login()
            return

        # –í–°–ï–ì–î–ê –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        if self.page_profile is not None:
            self.stack.removeWidget(self.page_profile)
            self.page_profile.deleteLater()

        self.page_profile = ProfileView(
            user_id=self.user_id,
            go_back=self.show_main_page,
            go_login=self.go_login
        )
        self.stack.addWidget(self.page_profile)
        self.stack.setCurrentWidget(self.page_profile)

    def show_admin_page(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
        self.user_data = UserModel.get_user_data(self.user_id)

        if not self.user_data or self.user_data['role_id'] != 2:
            QMessageBox.warning(self, "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω", "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return

        if self.page_admin_panel is not None:
            self.stack.removeWidget(self.page_admin_panel)
            self.page_admin_panel.deleteLater()

        self.page_admin_panel = AdminPanelView(
            go_back=self.show_main_page,
            go_to_users=self.show_panel_users,
            go_to_actors=self.show_panel_actors,
            go_to_directors=self.show_panel_directors,
            go_to_movies=self.show_panel_movies,
            go_to_genres = self.show_panel_genres
        )
        self.stack.addWidget(self.page_admin_panel)
        self.stack.setCurrentWidget(self.page_admin_panel)

    def show_panel_users(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
        # –í–°–ï–ì–î–ê –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
        if self.page_admin_panel_users is not None:
            self.stack.removeWidget(self.page_admin_panel_users)
            self.page_admin_panel_users.deleteLater()

        self.page_admin_panel_users = AdminPanelUsersView(
            go_back=self.show_admin_page
        )
        self.stack.addWidget(self.page_admin_panel_users)
        self.stack.setCurrentWidget(self.page_admin_panel_users)

    def show_movie_detail(self, movie_id):
        QMessageBox.information(
            self,
            "–§–∏–ª—å–º",
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ñ–∏–ª—å–º —Å ID: {movie_id}\n\n–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
        )

    def show_panel_actors(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç—ë—Ä–∞–º–∏"""
        from Views.AdminPanelActorsView import AdminPanelActorsView

        if self.page_admin_panel_actors is not None:
            self.stack.removeWidget(self.page_admin_panel_actors)
            self.page_admin_panel_actors.deleteLater()

        self.page_admin_panel_actors = AdminPanelActorsView(go_back=self.show_admin_page)
        self.stack.addWidget(self.page_admin_panel_actors)
        self.stack.setCurrentWidget(self.page_admin_panel_actors)

    def show_panel_directors(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏—Å—Å—ë—Ä–∞–º–∏"""
        from Views.AdminPanelDirectorsView import AdminPanelDirectorsView

        if self.page_admin_panel_directors is not None:
            self.stack.removeWidget(self.page_admin_panel_directors)
            self.page_admin_panel_directors.deleteLater()

        self.page_admin_panel_directors = AdminPanelDirectorsView(go_back=self.show_admin_page)
        self.stack.addWidget(self.page_admin_panel_directors)
        self.stack.setCurrentWidget(self.page_admin_panel_directors)

    def show_panel_movies(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞–º–∏"""
        from Views.AdminPanelMoviesView import AdminPanelMoviesView

        if self.page_admin_panel_movies is not None:
            self.stack.removeWidget(self.page_admin_panel_movies)
            self.page_admin_panel_movies.deleteLater()

        self.page_admin_panel_movies = AdminPanelMoviesView(go_back=self.show_admin_page)
        self.stack.addWidget(self.page_admin_panel_movies)
        self.stack.setCurrentWidget(self.page_admin_panel_movies)

    def show_panel_genres(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∞–Ω—Ä–∞–º–∏"""
        from Views.AdminPanelGenresView import AdminPanelGenresView

        if self.page_admin_panel_genres is not None:
            self.stack.removeWidget(self.page_admin_panel_genres)
            self.page_admin_panel_genres.deleteLater()

        self.page_admin_panel_genres = AdminPanelGenresView(go_back=self.show_admin_page)
        self.stack.addWidget(self.page_admin_panel_genres)
        self.stack.setCurrentWidget(self.page_admin_panel_genres)